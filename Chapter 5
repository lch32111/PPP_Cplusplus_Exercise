//Chapter 5.7
#include "std_lib_facilities"

double square(double x);
vector<double> quadratic_formula(double a, double b, double c);

int main()
try
{
	double a{ 0 };
	double b{ 0 };
	double c{ 0 };

	cin >> a >> b >> c;

	vector<double> solutions = quadratic_formula(a, b, c);

	cout << "The solutions are.. (" << solutions[0]
		<< ", " << solutions[1] << ")\n";
	
	return 0;
}
catch (exception& e)
{
	cerr << "error : " << e.what() << "\n";
	return 1;
}

vector<double> quadratic_formula(double a, double b, double c)
{
	vector<double> solutions(2);
	if ((square(b) - 4 * a * c) < 0) 
		error("There is no solution because the value is 0 in the root");

	solutions[0] = ((-1 * b) + sqrt(square(b) - 4 * a *c)) / (2 * a);
	solutions[1] = ((-1 * b) - sqrt(square(b) - 4 * a *c)) / (2 * a);

	return solutions;
}

double square(double x)
{
	return x * x;
}

//Chapter 5.8
#include "std.lib.facilities"

int main()
try
{
	cout << "Please enter the number of values yo want to sum: ";

	int number_sum{ 0 };
	cin >> number_sum;
	
	cout << "Please enter some integers(press'|' to stop): ";
	
	vector<int> user_inputs;
	for (int x; cin >> x;)
		user_inputs.push_back(x);

	if (number_sum > user_inputs.size()) 
		error("number of values you want to sum exceeds more than integers you enter");

	int sum{ 0 };
	for (int i = 0; i < number_sum; ++i)
		sum += user_inputs[i];

	cout << "The sum of the first 3 numbers (";
	for (int i = 0; i < number_sum; ++i) cout << user_inputs[i] << " ";
	cout << ") is " << sum;


	return 0;
}
catch (exception& e)
{
	cerr << "error : " << e.what() << "\n";
	return 1;
}
